#BlueJ class context
comment0.target=GymGUI
comment0.text=\n\ Graphical\ User\ Interface(GUI)\ for\ managing\ gym\ members.\n\ \n\ It\ allows\ the\ input\ and\ display\ of\ the\ information\ of\ both\ regular\ and\ premium\ members.\n\ \n\ @author\ Sadikshya\ Karki\n
comment1.params=
comment1.target=GymGUI()
comment1.text=\n\ Constructor\ to\ initialize\ the\ GymGUI\ frame.\n\ \n\ It\ sets\ up\ the\ title,\ default\ close\ operation,\ UI\ components\ and\ location\ of\ the\ frame.\n
comment10.params=e
comment10.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment11.params=e
comment11.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment12.params=e
comment12.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment13.params=e
comment13.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment14.params=e
comment14.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment15.params=e
comment15.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment16.params=e
comment16.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment17.params=e
comment17.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment18.params=id
comment18.target=boolean\ isIdDuplicate(int)
comment18.text=\n\ It\ checks\ if\ a\ member\ ID\ already\ exists\ in\ the\ member\ list.\n\ It\ returns\ true\ if\ the\ ID\ is\ duplicate\ otherwise\ false.\n
comment19.params=email
comment19.target=boolean\ isEmailValid(java.lang.String)
comment19.text=\n\ Checks\ if\ the\ email\ is\ valid\:\n\ -\ No\ spaces\n\ -\ Exactly\ one\ '@',\ not\ at\ start\ or\ end\n\ -\ At\ least\ one\ '.'\ after\ '@',\ not\ at\ end\n\ @return\ true\ if\ valid,\ false\ otherwise\n
comment2.params=
comment2.target=void\ setupDateComboBoxes()
comment2.text=\n\ It\ sets\ up\ the\ combo\ boxes\ for\ selecting\ a\ date(year,\ month\ and\ day)\ for\ two\ fields,\n\ Date\ of\ Birth(dob)\ and\ Membership\ Start\ Date(ms).\n\ \n\ This\ method\ initializes\ the\ combo\ boxes\ for\:\n\ Years\:\ From\ 1950\ to\ 2024\n\ Months\:\ January\ to\ December\n\ Days\:\ 1\ to\ 31\n
comment20.params=
comment20.target=void\ addRegularMember()
comment20.text=\n\ This\ method\ adds\ a\ new\ regular\ member\ to\ the\ member\ list\ after\ checking\ the\ details\ provided.\n\ It\ makes\ sure\ the\ member\ ID\ is\ unique\ and\ all\ the\ required\ fields\ are\ filled.\n\ It\ also\ displays\ an\ error\ message\ if\ the\ ID\ is\ invalid\ or\ the\ input\ format\ is\ incorrect.\n
comment21.params=
comment21.target=void\ markAttendance()
comment21.text=\n\ Marks\ a\ gym\ member\ attendance\ if\ their\ ID\ is\ valid\ and\ membership\ is\ active.\n\ Shows\ success\ or\ error\ message\ accordingly.\n
comment22.params=
comment22.target=void\ revertMember()
comment22.text=\n\ Reverts\ member\ status\ based\ on\ their\ ID\ is\ valid.\n\ For\ Regular\ Members,\ a\ removal\ reason\ must\ be\ provided.\n\ For\ Premium\ Members,\ no\ removal\ reason\ is\ required.\n\ Shows\ an\ error\ if\ the\ ID\ is\ invalid\ or\ the\ member\ is\ not\ found.\n
comment23.params=
comment23.target=void\ addPremiumMember()
comment23.text=\n\ This\ method\ adds\ a\ new\ premium\ member\ to\ the\ member\ list\ after\ checking\ the\ details\ provided.\n\ It\ makes\ sure\ the\ member\ ID\ is\ unique\ and\ all\ the\ required\ fields\ are\ filled.\n\ It\ also\ displays\ an\ error\ message\ if\ the\ ID\ is\ invalid\ or\ the\ input\ format\ is\ incorrect.\n
comment24.params=
comment24.target=void\ upgradePlan()
comment24.text=\n\ Upgrades\ regular\ member\ plan\ if\ their\ ID\ is\ valid,\ membership\ is\ active\ and\ they\ are\ a\ regular\ member,\n\ otherwise\ shows\ an\ appropriate\ message.\n
comment25.params=
comment25.target=void\ displayMembers()
comment25.text=\n\ Displays\ the\ details\ of\ all\ members.\n\ Lists\ each\ member's\ information\ including\ ID,\ name,\ location,\ phone,\ email,\ gender,\ DOB,\ membership\ start\ date,\n\ attendance,\ loyalty\ points\ and\ active\ status.\n\ For\ Regular\ Members,\ it\ shows\ the\ plan,\ price\ and\ removal\ reason\ if\ available.\n\ For\ Premium\ Members,\ it\ shows\ personal\ trainer,\ paid\ amount,\ payment\ status,\ remaining\ amount\ and\ discount\ if\ applicable.\n\ If\ no\ members\ are\ found,\ a\ message\ "No\ members\ found\!"\ is\ displayed.\n
comment26.params=
comment26.target=void\ activateMembership()
comment26.text=\n\ Activates\ the\ membership\ of\ a\ gym\ member\ if\ the\ ID\ is\ valid\ and\ member\ is\ found\ in\ the\ list\ and\ shows\ success\ message,\n\ otherwise\ shows\ an\ error\ message.\n
comment27.params=
comment27.target=void\ calculateDiscount()
comment27.text=\n\ Calculates\ and\ displays\ the\ discount\ for\ a\ premium\ member\ if\ their\ ID\ is\ valid,\n\ otherwise\ shows\ an\ error\ message.\n
comment28.params=
comment28.target=void\ saveToFile()
comment28.text=\n\ Saves\ all\ gym\ members'\ details\ into\ a\ file\ named\ "MemberDetails.txt".\n\ It\ includes\ basic\ info\ for\ every\ member\ and\ extra\ payment\ details\ for\ premium\ members.\n\ Shows\ a\ success\ message\ when\ done\ or\ an\ error\ message\ if\ something\ goes\ wrong.\n\ \n
comment29.params=
comment29.target=void\ deactivateMembership()
comment29.text=\n\ Deactivates\ the\ membership\ of\ a\ gym\ member\ if\ the\ ID\ is\ valid\ and\ member\ is\ found\ in\ the\ list\ and\ shows\ success\ message,\n\ otherwise\ shows\ an\ error\ message.\n
comment3.params=
comment3.target=void\ setupUI()
comment3.text=\n\ Sets\ up\ the\ user\ interface\ components.\n\ This\ method\ initializes\ and\ sets\ the\ following\ sections\:\n\ \n\ 1.\ Personal\ Information\ Section\:\n\ \ \ \ Member\ ID,\ Name,\ Location,\ Phone,\ Email,\ Gender,\ Date\ of\ Birth(dob)\n\ \ \ \ \n\ 2.\ Membership\ Details\ Section\:\n\ \ \ \ Membership\ Start\ Date,\ Referall\ Source,\ Plan,\ Regular\ Plan\ Price,\ \n\ \ \ \ Premium\ Plan\ Charge,\ Paid\ Amount,\ Discount\ Amount,\ Trainer's\ Name,\ Removal\ Reason\n\ \ \ \ \n\ 3.\ Action\ Buttons\ Sections\:\n\ \ \ \ Action\ Buttons\ for\ adding\ regular\ and\ premium\ members,\ marking\ attendance,\ \n\ \ \ \ reverting\ members,\ upgrading\ plans,\ activating\ and\ deactivating\ membership,\ \n\ \ \ \ calculating\ discounts,\ paying\ due\ amounts,\ clearing\ all\ fields\n\ \ \ \ \n\ It\ also\ sets\ up\ combo\ boxes\ for\ selecting\ date\ of\ birth\ and\ membership\ start\ dates,\n\ adds\ appropriate\ action\ listeners\ to\ the\ buttons\ and\ confirm\ the\ layout\ and\ styling.\n
comment30.params=
comment30.target=void\ payDueAmount()
comment30.text=\ \n\ Pays\ the\ due\ amount\ for\ a\ premium\ member\ if\ their\ ID\ is\ valid\ and\ payment\ amount\ is\ provided,\n\ otherwise\ shows\ an\ error\ message.\n
comment31.params=
comment31.target=void\ readFromFile()
comment31.text=\n\ Reads\ member\ details\ from\ "MemberDetails.txt"\ and\ displays\ them\ in\ a\ new\ window.\n\ If\ the\ file\ doesnot\ exist,\ it\ lets\ the\ user\ choose\ a\ file\ manually.\n\ Shows\ an\ error\ message\ if\ the\ file\ cannot\ be\ read.\n
comment32.params=
comment32.target=void\ clearFields()
comment32.text=\n\ Clear\ all\ input\ fields\ and\ resets\ selections\ to\ their\ default\ state.\n
comment33.params=args
comment33.target=void\ main(java.lang.String[])
comment33.text=\n\ Activates\ the\ GymGUI\ application.\n
comment4.params=e
comment4.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment5.params=e
comment5.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment6.params=e
comment6.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment7.params=e
comment7.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment8.params=e
comment8.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment9.params=e
comment9.target=void\ actionPerformed(java.awt.event.ActionEvent)
numComments=34
